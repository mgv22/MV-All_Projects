--GOOD ON FIRST DOWN
SELECT pff_OFFTEAM, 
On_Schedule_Count = COUNT(*)
,On_Schedule_Percentage = AVG(CASE WHEN (pff_DISTANCE - pff_GAINLOSS) <= CAST(pff_DISTANCE AS FLOAT) * 0.5 THEN CAST(1 AS FLOAT) ELSE 0 END)
FROM PFFPLAYS
WHERE pff_GAMESEASON = 2022 AND pff_DOWN = 1 
GROUP BY pff_OFFTEAM
ORDER BY On_Schedule_Percentage DESC


--KEEP CHAINS MOVING ON 2ND
SELECT pff_OFFTEAM, 
On_Schedule_Count = COUNT(*)
,On_Schedule_Percentage = AVG(CASE WHEN pff_DISTANCE - pff_GAINLOSS <= 4 THEN CAST(1 AS FLOAT) ELSE 0 END)
FROM PFFPLAYS
WHERE pff_GAMESEASON = 2022 AND pff_DOWN = 2 
GROUP BY pff_OFFTEAM
ORDER BY On_Schedule_Percentage DESC



--KEEP CHAINS MOVING ON 1ST AND 2ND
SELECT pff_OFFTEAM, 
On_Schedule_Count = COUNT(*)
,On_Schedule_Percentage = AVG(CASE WHEN (pff_DOWN = 2 AND pff_DISTANCE - pff_GAINLOSS <= 4) OR 
												(pff_DOWN = 1 AND pff_DISTANCE - pff_GAINLOSS <= 0.5*CAST(pff_DISTANCE AS FLOAT)) 
												THEN CAST(1 AS FLOAT) ELSE 0 END)
FROM PFFPLAYS
WHERE pff_GAMESEASON = 2022 
GROUP BY pff_OFFTEAM
ORDER BY On_Schedule_Percentage DESC


--KEEP CHAINS MOVING ON 3RD
SELECT pff_OFFTEAM, 
On_Schedule_Count = COUNT(*)
,On_Schedule_Percentage = ROUND(AVG(CASE WHEN (pff_DOWN = 1 AND pff_DISTANCE - pff_GAINLOSS <= 0.5*CAST(pff_DISTANCE AS FLOAT)) OR
											(pff_DOWN = 2 AND pff_DISTANCE - pff_GAINLOSS <= 4) OR 
											(pff_DOWN = 3 AND pff_DISTANCE < pff_GAINLOSS) THEN CAST(1 AS FLOAT) ELSE 0 END) * 100, 2)
FROM PFFPLAYS
WHERE pff_GAMESEASON = 2022 
GROUP BY pff_OFFTEAM
ORDER BY On_Schedule_Percentage DESC



--3RD CONVERSION PERCENTAGE
SELECT pff_OFFTEAM, 
Conversion_Opps = COUNT(*)
--,Conversions = COUNT(CASE WHEN (pff_DISTANCE < pff_GAINLOSS) THEN CAST(1 AS FLOAT) ELSE 0 END)
,Conversion_Percentage = AVG(CASE WHEN (pff_DISTANCE < pff_GAINLOSS) THEN CAST(1 AS FLOAT) ELSE 0 END)
FROM PFFPLAYS
WHERE pff_GAMESEASON = 2022 AND pff_DOWN = 3
GROUP BY pff_OFFTEAM
ORDER BY Conversion_Percentage DESC